{
  "services": [
    {
      "id": 1,
      "name": "AWS Lambda",
      "logo": "/img/icons/lambda.png"
    }, {
      "id": 10,
      "name": "Node.js",
      "logo": "/img/icons/nodejs.png"
    }, {
      "id": 11,
      "name": "Python",
      "logo": "/img/icons/python.png"
    }
  ],
  "languages": [
    {
      "id": 1,
      "name": "Logbird Query"
    }, {
      "id": 2,
      "name": "Regex"
    }
  ],
  "rules": [
    {
      "id": 1,
      "serviceId": 1,
      "langId": 1,
      "name": "timeout",
      "pattern": "\"Task timed out after\""
    }, {
      "id": 2,
      "serviceId": 1,
      "langId": 1,
      "name": "early exit",
      "pattern": "\"Process exited before completing request\""
    }, {
      "id": 3,
      "serviceId": 1,
      "langId": 1,
      "name": "out of memory",
      "pattern": "REPORT \n| parse \"Memory Size: * MB Max Memory Used: * MB\" as memSize, memUsed \n| where memSize<=memUsed"
    }, {
      "id": 4,
      "serviceId": 10,
      "langId": 1,
      "name": "error",
      "pattern": "\"Syntax error in module\""
    }, {
      "id": 5,
      "serviceId": 10,
      "langId": 1,
      "name": "crash",
      "pattern": "errorMessage and stackTrace \n| parse \"* * *\" as time, requestId, error \n| json field=error \n| fields errorType, errorMessage"
    }, {
      "id": 6,
      "serviceId": 11,
      "langId": 2,
      "name": "All exceptions (errors and warnings)",
      "pattern": "(?<exception>((.*))(?<type>(Error|Iteration|Exit|Warning|Interrupt))):\\s(?<description>(.*))"
    }, {
      "id": 7,
      "serviceId": 11,
      "langId": 2,
      "name": "Only errors (no warnings)",
      "pattern": "(?<exception>((.*))(?<type>(Error|Iteration|Exit))):\\s(?<description>(.*))"
    }
  ]
}
